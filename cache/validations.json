{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm2.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCE": {
        "src": "contracts/Farm1.sol:36",
        "version": {
          "withMetadata": "f150c26021f530fc1d3b54a679b67d708fbf9d3140afc5b0aa71e816281f2436",
          "withoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7",
          "linkedWithoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingRANCE(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCE",
              "label": "RANCE",
              "type": "t_contract(IBEP20)4340",
              "src": "contracts/Farm1.sol:66"
            },
            {
              "contract": "MasterRANCE",
              "label": "RANCEPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:68"
            },
            {
              "contract": "MasterRANCE",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:70"
            },
            {
              "contract": "MasterRANCE",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)1871",
              "src": "contracts/Farm1.sol:72"
            },
            {
              "contract": "MasterRANCE",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)4262",
              "src": "contracts/Farm1.sol:74"
            },
            {
              "contract": "MasterRANCE",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)1901_storage)dyn_storage",
              "src": "contracts/Farm1.sol:77"
            },
            {
              "contract": "MasterRANCE",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))",
              "src": "contracts/Farm1.sol:79"
            },
            {
              "contract": "MasterRANCE",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:81"
            },
            {
              "contract": "MasterRANCE",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)4340": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)1871": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)4262": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)1901_storage)dyn_storage": {
              "label": "struct MasterRANCE.PoolInfo[]"
            },
            "t_struct(PoolInfo)1901_storage": {
              "label": "struct MasterRANCE.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)4340"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accRANCEPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterRANCE.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)1891_storage)": {
              "label": "mapping(address => struct MasterRANCE.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)1891_storage": {
              "label": "struct MasterRANCE.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterMUSD": {
        "src": "contracts/Farm2.sol:36",
        "version": {
          "withMetadata": "946b834bdb8e518d3e98f3dae06b8d787515484c74d5870a26db856909dacafb",
          "withoutMetadata": "e31c0d478171037565883c86908f3873f5837d4124fe82131476512bb4338a5c",
          "linkedWithoutMetadata": "e31c0d478171037565883c86908f3873f5837d4124fe82131476512bb4338a5c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingMUSD(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterMUSD",
              "label": "MUSD",
              "type": "t_contract(IBEP20)4340",
              "src": "contracts/Farm2.sol:66"
            },
            {
              "contract": "MasterMUSD",
              "label": "MUSDPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:68"
            },
            {
              "contract": "MasterMUSD",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:70"
            },
            {
              "contract": "MasterMUSD",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)2987",
              "src": "contracts/Farm2.sol:72"
            },
            {
              "contract": "MasterMUSD",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)4262",
              "src": "contracts/Farm2.sol:74"
            },
            {
              "contract": "MasterMUSD",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)3017_storage)dyn_storage",
              "src": "contracts/Farm2.sol:77"
            },
            {
              "contract": "MasterMUSD",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3007_storage))",
              "src": "contracts/Farm2.sol:79"
            },
            {
              "contract": "MasterMUSD",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:81"
            },
            {
              "contract": "MasterMUSD",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)4340": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)2987": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)4262": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)3017_storage)dyn_storage": {
              "label": "struct MasterMUSD.PoolInfo[]"
            },
            "t_struct(PoolInfo)3017_storage": {
              "label": "struct MasterMUSD.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)4340"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accMUSDPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3007_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterMUSD.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)3007_storage)": {
              "label": "mapping(address => struct MasterMUSD.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)3007_storage": {
              "label": "struct MasterMUSD.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCEWallet": {
        "src": "contracts/MasterRANCEWallet.sol:8",
        "version": {
          "withMetadata": "277875ba515d3f57b2f7256536df05cf178ad3ad407b99e7c9e45eb9137e17f1",
          "withoutMetadata": "e13aed1b7a61e1e1b395a84b82e68257226c4dc4bdfc89c93830e0a3fe0fee72",
          "linkedWithoutMetadata": "e13aed1b7a61e1e1b395a84b82e68257226c4dc4bdfc89c93830e0a3fe0fee72"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "addMasterRANCE(address)",
          "removeMasterRANCE(address)",
          "safeTokenTransfer(address,uint256,address)",
          "safeRANCETransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterRANCEWallet",
            "src": "contracts/MasterRANCEWallet.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCEWallet",
              "label": "RANCE",
              "type": "t_contract(IBEP20)4340",
              "src": "contracts/MasterRANCEWallet.sol:11"
            },
            {
              "contract": "MasterRANCEWallet",
              "label": "masters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/MasterRANCEWallet.sol:12"
            }
          ],
          "types": {
            "t_contract(IBEP20)4340": {
              "label": "contract IBEP20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm2.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCE": {
        "src": "contracts/Farm1.sol:36",
        "version": {
          "withMetadata": "d6b5d8ab760d7bc70281ff5ae6e97c6437b3cee30c567ae15ca82f6a3b98b64a",
          "withoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7",
          "linkedWithoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingRANCE(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCE",
              "label": "RANCE",
              "type": "t_contract(IBEP20)4342",
              "src": "contracts/Farm1.sol:66"
            },
            {
              "contract": "MasterRANCE",
              "label": "RANCEPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:68"
            },
            {
              "contract": "MasterRANCE",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:70"
            },
            {
              "contract": "MasterRANCE",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)1871",
              "src": "contracts/Farm1.sol:72"
            },
            {
              "contract": "MasterRANCE",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)4264",
              "src": "contracts/Farm1.sol:74"
            },
            {
              "contract": "MasterRANCE",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)1901_storage)dyn_storage",
              "src": "contracts/Farm1.sol:77"
            },
            {
              "contract": "MasterRANCE",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))",
              "src": "contracts/Farm1.sol:79"
            },
            {
              "contract": "MasterRANCE",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:81"
            },
            {
              "contract": "MasterRANCE",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)4342": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)1871": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)4264": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)1901_storage)dyn_storage": {
              "label": "struct MasterRANCE.PoolInfo[]"
            },
            "t_struct(PoolInfo)1901_storage": {
              "label": "struct MasterRANCE.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)4342"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accRANCEPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterRANCE.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)1891_storage)": {
              "label": "mapping(address => struct MasterRANCE.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)1891_storage": {
              "label": "struct MasterRANCE.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterMUSD": {
        "src": "contracts/Farm2.sol:36",
        "version": {
          "withMetadata": "f9462b223e059f4f4ed4f68d6ec7bed2bcf950ca4bbdb71772db6d2b2bfde4f2",
          "withoutMetadata": "e31c0d478171037565883c86908f3873f5837d4124fe82131476512bb4338a5c",
          "linkedWithoutMetadata": "e31c0d478171037565883c86908f3873f5837d4124fe82131476512bb4338a5c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingMUSD(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterMUSD",
              "label": "MUSD",
              "type": "t_contract(IBEP20)4342",
              "src": "contracts/Farm2.sol:66"
            },
            {
              "contract": "MasterMUSD",
              "label": "MUSDPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:68"
            },
            {
              "contract": "MasterMUSD",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:70"
            },
            {
              "contract": "MasterMUSD",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)2987",
              "src": "contracts/Farm2.sol:72"
            },
            {
              "contract": "MasterMUSD",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)4264",
              "src": "contracts/Farm2.sol:74"
            },
            {
              "contract": "MasterMUSD",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)3017_storage)dyn_storage",
              "src": "contracts/Farm2.sol:77"
            },
            {
              "contract": "MasterMUSD",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3007_storage))",
              "src": "contracts/Farm2.sol:79"
            },
            {
              "contract": "MasterMUSD",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:81"
            },
            {
              "contract": "MasterMUSD",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)4342": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)2987": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)4264": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)3017_storage)dyn_storage": {
              "label": "struct MasterMUSD.PoolInfo[]"
            },
            "t_struct(PoolInfo)3017_storage": {
              "label": "struct MasterMUSD.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)4342"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accMUSDPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3007_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterMUSD.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)3007_storage)": {
              "label": "mapping(address => struct MasterMUSD.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)3007_storage": {
              "label": "struct MasterMUSD.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCEWallet": {
        "src": "contracts/MasterRANCEWallet.sol:8",
        "version": {
          "withMetadata": "84dc241d24210a967c70f29191a4d08ee4734a44b33d9ff7cfca52c314b35762",
          "withoutMetadata": "a0e8871f87a94460c5af09dbbdbf753c2897bc24561667ebae5831fdabc89244",
          "linkedWithoutMetadata": "a0e8871f87a94460c5af09dbbdbf753c2897bc24561667ebae5831fdabc89244"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "addMasterRANCE(address)",
          "removeMasterRANCE(address)",
          "safeTokenTransfer(address,uint256,address)",
          "safeRANCETransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterRANCEWallet",
            "src": "contracts/MasterRANCEWallet.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCEWallet",
              "label": "RANCE",
              "type": "t_contract(IBEP20)4342",
              "src": "contracts/MasterRANCEWallet.sol:11"
            },
            {
              "contract": "MasterRANCEWallet",
              "label": "MasterRANCE",
              "type": "t_address",
              "src": "contracts/MasterRANCEWallet.sol:12"
            },
            {
              "contract": "MasterRANCEWallet",
              "label": "masters",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/MasterRANCEWallet.sol:13"
            }
          ],
          "types": {
            "t_contract(IBEP20)4342": {
              "label": "contract IBEP20"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm2.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCE": {
        "src": "contracts/Farm1.sol:36",
        "version": {
          "withMetadata": "beca92e67f12d24dc1f58d06fe82b02a4068b0ca2d788f572889c6d5e5ec3eac",
          "withoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7",
          "linkedWithoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingRANCE(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCE",
              "label": "RANCE",
              "type": "t_contract(IBEP20)4322",
              "src": "contracts/Farm1.sol:66"
            },
            {
              "contract": "MasterRANCE",
              "label": "RANCEPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:68"
            },
            {
              "contract": "MasterRANCE",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:70"
            },
            {
              "contract": "MasterRANCE",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)1871",
              "src": "contracts/Farm1.sol:72"
            },
            {
              "contract": "MasterRANCE",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)4244",
              "src": "contracts/Farm1.sol:74"
            },
            {
              "contract": "MasterRANCE",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)1901_storage)dyn_storage",
              "src": "contracts/Farm1.sol:77"
            },
            {
              "contract": "MasterRANCE",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))",
              "src": "contracts/Farm1.sol:79"
            },
            {
              "contract": "MasterRANCE",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:81"
            },
            {
              "contract": "MasterRANCE",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm1.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)4322": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)1871": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)4244": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)1901_storage)dyn_storage": {
              "label": "struct MasterRANCE.PoolInfo[]"
            },
            "t_struct(PoolInfo)1901_storage": {
              "label": "struct MasterRANCE.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)4322"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accRANCEPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterRANCE.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)1891_storage)": {
              "label": "mapping(address => struct MasterRANCE.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)1891_storage": {
              "label": "struct MasterRANCE.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterMUSD": {
        "src": "contracts/Farm2.sol:36",
        "version": {
          "withMetadata": "e7f707af88b1be870ec03658d7d0b129a789555ba86290c9f8ec5cda743de47d",
          "withoutMetadata": "e31c0d478171037565883c86908f3873f5837d4124fe82131476512bb4338a5c",
          "linkedWithoutMetadata": "e31c0d478171037565883c86908f3873f5837d4124fe82131476512bb4338a5c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingMUSD(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterMUSD",
              "label": "MUSD",
              "type": "t_contract(IBEP20)4322",
              "src": "contracts/Farm2.sol:66"
            },
            {
              "contract": "MasterMUSD",
              "label": "MUSDPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:68"
            },
            {
              "contract": "MasterMUSD",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:70"
            },
            {
              "contract": "MasterMUSD",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)2987",
              "src": "contracts/Farm2.sol:72"
            },
            {
              "contract": "MasterMUSD",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)4244",
              "src": "contracts/Farm2.sol:74"
            },
            {
              "contract": "MasterMUSD",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)3017_storage)dyn_storage",
              "src": "contracts/Farm2.sol:77"
            },
            {
              "contract": "MasterMUSD",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3007_storage))",
              "src": "contracts/Farm2.sol:79"
            },
            {
              "contract": "MasterMUSD",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:81"
            },
            {
              "contract": "MasterMUSD",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm2.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)4322": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)2987": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)4244": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)3017_storage)dyn_storage": {
              "label": "struct MasterMUSD.PoolInfo[]"
            },
            "t_struct(PoolInfo)3017_storage": {
              "label": "struct MasterMUSD.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)4322"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accMUSDPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3007_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterMUSD.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)3007_storage)": {
              "label": "mapping(address => struct MasterMUSD.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)3007_storage": {
              "label": "struct MasterMUSD.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCEWallet": {
        "src": "contracts/MasterRANCEWallet.sol:8",
        "version": {
          "withMetadata": "9d43441eff30b520661d6685c25c3a370c9e13ccd4ea9b264ec2ab529fb3effe",
          "withoutMetadata": "6a21a19c6330c8917494bd9a410f5941f823dd6330fc73af95e04f3a0894f0a3",
          "linkedWithoutMetadata": "6a21a19c6330c8917494bd9a410f5941f823dd6330fc73af95e04f3a0894f0a3"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "setMasterRANCE(address)",
          "safeTokenTransfer(address,uint256,address)",
          "safeRANCETransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterRANCEWallet",
            "src": "contracts/MasterRANCEWallet.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCEWallet",
              "label": "RANCE",
              "type": "t_contract(IBEP20)4322",
              "src": "contracts/MasterRANCEWallet.sol:11"
            },
            {
              "contract": "MasterRANCEWallet",
              "label": "MasterRANCE",
              "type": "t_address",
              "src": "contracts/MasterRANCEWallet.sol:12"
            }
          ],
          "types": {
            "t_contract(IBEP20)4322": {
              "label": "contract IBEP20"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCE": {
        "src": "contracts/Farm.sol:36",
        "version": {
          "withMetadata": "c3aa2bab8fc805ff3892e3b250abc3b236bd92718f8d10652c2f9e54201c89a8",
          "withoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7",
          "linkedWithoutMetadata": "bb2d18e1b2fb70737abcb732dc6637adca5afc5c73264ba8842d207484c7ced7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingRANCE(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCE",
              "label": "RANCE",
              "type": "t_contract(IBEP20)3144",
              "src": "contracts/Farm.sol:66"
            },
            {
              "contract": "MasterRANCE",
              "label": "RANCEPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:68"
            },
            {
              "contract": "MasterRANCE",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:70"
            },
            {
              "contract": "MasterRANCE",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)1871",
              "src": "contracts/Farm.sol:72"
            },
            {
              "contract": "MasterRANCE",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)3066",
              "src": "contracts/Farm.sol:74"
            },
            {
              "contract": "MasterRANCE",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)1901_storage)dyn_storage",
              "src": "contracts/Farm.sol:77"
            },
            {
              "contract": "MasterRANCE",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))",
              "src": "contracts/Farm.sol:79"
            },
            {
              "contract": "MasterRANCE",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:81"
            },
            {
              "contract": "MasterRANCE",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)3144": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)1871": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)3066": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)1901_storage)dyn_storage": {
              "label": "struct MasterRANCE.PoolInfo[]"
            },
            "t_struct(PoolInfo)1901_storage": {
              "label": "struct MasterRANCE.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)3144"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accRANCEPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1891_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterRANCE.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)1891_storage)": {
              "label": "mapping(address => struct MasterRANCE.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)1891_storage": {
              "label": "struct MasterRANCE.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCEWallet": {
        "src": "contracts/MasterRANCEWallet.sol:8",
        "version": {
          "withMetadata": "7542b18048c88fe659c4c724fce3346ce43316c7744014880bd17ce27925a1d4",
          "withoutMetadata": "820d650276134df9c1158a82e5bbc5fc5218d0a16a3121e00039182ded0ba753",
          "linkedWithoutMetadata": "820d650276134df9c1158a82e5bbc5fc5218d0a16a3121e00039182ded0ba753"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "setMasterRANCE(address)",
          "safeRANCETransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterRANCEWallet",
            "src": "contracts/MasterRANCEWallet.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCEWallet",
              "label": "RANCE",
              "type": "t_contract(IBEP20)3144",
              "src": "contracts/MasterRANCEWallet.sol:11"
            },
            {
              "contract": "MasterRANCEWallet",
              "label": "MasterRANCE",
              "type": "t_address",
              "src": "contracts/MasterRANCEWallet.sol:12"
            }
          ],
          "types": {
            "t_contract(IBEP20)3144": {
              "label": "contract IBEP20"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Context": {
        "src": "contracts/RANCE.sol:105",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/RANCE.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts/RANCE.sol:281",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/RANCE.sol:289"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/RANCE.sol:282"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RANCE": {
        "src": "contracts/RANCE.sol:328",
        "version": {
          "withMetadata": "c95327563812b0766edabbbce03b1c71e1c8d503e870d59427c3bf65c672d5ac",
          "withoutMetadata": "63c24238075ff38f88b83acacb46afda057203949c27547d1c83a61b14ad7943",
          "linkedWithoutMetadata": "63c24238075ff38f88b83acacb46afda057203949c27547d1c83a61b14ad7943"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "burn(uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RANCE",
            "src": "contracts/RANCE.sol:340"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "RANCE",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RANCE.sol:331"
            },
            {
              "contract": "RANCE",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RANCE.sol:333"
            },
            {
              "contract": "RANCE",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RANCE.sol:335"
            },
            {
              "contract": "RANCE",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RANCE.sol:336"
            },
            {
              "contract": "RANCE",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RANCE.sol:337"
            },
            {
              "contract": "RANCE",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RANCE.sol:338"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts/RANCE.sol:133",
        "version": {
          "withMetadata": "8db8621068a9f872d4c7e8dc7e650de0a650b89ba59be446a23cbf329cf202f0",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "995abfd5901dc380f3fed9da99f86b86b04d5a1bbe1a1ce59071222e12ce57ec",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCE": {
        "src": "contracts/Farm.sol:36",
        "version": {
          "withMetadata": "794f4f889a173cc6eec4ab7ad75a3e5fe51dd8fbaa79bd81d562afcce46e25bc",
          "withoutMetadata": "440f0e9e21af6e9ff37b1ba7bfce033a5e940cde88d8c04c8c043b5ee03ccbfd",
          "linkedWithoutMetadata": "440f0e9e21af6e9ff37b1ba7bfce033a5e940cde88d8c04c8c043b5ee03ccbfd"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingRANCE(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCE",
              "label": "RANCE",
              "type": "t_contract(IBEP20)3841",
              "src": "contracts/Farm.sol:66"
            },
            {
              "contract": "MasterRANCE",
              "label": "RANCEPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:68"
            },
            {
              "contract": "MasterRANCE",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:70"
            },
            {
              "contract": "MasterRANCE",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)2520",
              "src": "contracts/Farm.sol:72"
            },
            {
              "contract": "MasterRANCE",
              "label": "wallet",
              "type": "t_contract(MasterRANCEWallet)3763",
              "src": "contracts/Farm.sol:74"
            },
            {
              "contract": "MasterRANCE",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)2550_storage)dyn_storage",
              "src": "contracts/Farm.sol:77"
            },
            {
              "contract": "MasterRANCE",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))",
              "src": "contracts/Farm.sol:79"
            },
            {
              "contract": "MasterRANCE",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:81"
            },
            {
              "contract": "MasterRANCE",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:83"
            }
          ],
          "types": {
            "t_contract(IBEP20)3841": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)2520": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterRANCEWallet)3763": {
              "label": "contract MasterRANCEWallet"
            },
            "t_array(t_struct(PoolInfo)2550_storage)dyn_storage": {
              "label": "struct MasterRANCE.PoolInfo[]"
            },
            "t_struct(PoolInfo)2550_storage": {
              "label": "struct MasterRANCE.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)3841"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accRANCEPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterRANCE.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)2540_storage)": {
              "label": "mapping(address => struct MasterRANCE.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)2540_storage": {
              "label": "struct MasterRANCE.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "LPToken1": {
        "src": "contracts/LPTokens.sol:7",
        "version": {
          "withMetadata": "f7a7919a24a843a3ef65eec6874f4a28c1b5e2f6342bfb9d4ed3b64895ffdae1",
          "withoutMetadata": "38f5c88e7b0602da6944e9884df39901c326a1f6b9e12547fc12dc77c53f3866",
          "linkedWithoutMetadata": "38f5c88e7b0602da6944e9884df39901c326a1f6b9e12547fc12dc77c53f3866"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LPToken1",
            "src": "contracts/LPTokens.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LPToken2": {
        "src": "contracts/LPTokens.sol:13",
        "version": {
          "withMetadata": "282cd12f9f2ad3c955b416adc8c67c6a2348e60d14f7b8a7a1631d7782f4b0d8",
          "withoutMetadata": "cc4057acd81071cc9433421474f5802c561529a438297851820615cad6cc3305",
          "linkedWithoutMetadata": "cc4057acd81071cc9433421474f5802c561529a438297851820615cad6cc3305"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LPToken2",
            "src": "contracts/LPTokens.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterRANCEWallet": {
        "src": "contracts/MasterRANCEWallet.sol:8",
        "version": {
          "withMetadata": "7542b18048c88fe659c4c724fce3346ce43316c7744014880bd17ce27925a1d4",
          "withoutMetadata": "820d650276134df9c1158a82e5bbc5fc5218d0a16a3121e00039182ded0ba753",
          "linkedWithoutMetadata": "820d650276134df9c1158a82e5bbc5fc5218d0a16a3121e00039182ded0ba753"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "setMasterRANCE(address)",
          "safeRANCETransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterRANCEWallet",
            "src": "contracts/MasterRANCEWallet.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterRANCEWallet",
              "label": "RANCE",
              "type": "t_contract(IBEP20)3841",
              "src": "contracts/MasterRANCEWallet.sol:11"
            },
            {
              "contract": "MasterRANCEWallet",
              "label": "MasterRANCE",
              "type": "t_address",
              "src": "contracts/MasterRANCEWallet.sol:12"
            }
          ],
          "types": {
            "t_contract(IBEP20)3841": {
              "label": "contract IBEP20"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "CROPredict": {
        "src": "contracts/RANCE.sol:328",
        "version": {
          "withMetadata": "2f0e553bd72028e8c83e5c1671cf436c4f85c2c06cc07378c4617e33375bc074",
          "withoutMetadata": "6b80cf22466ea9f51107e39df396b6f2e892520daa298037df789e595102eeae",
          "linkedWithoutMetadata": "6b80cf22466ea9f51107e39df396b6f2e892520daa298037df789e595102eeae"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "burn(uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CROPredict",
            "src": "contracts/RANCE.sol:340"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "CROPredict",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/RANCE.sol:331"
            },
            {
              "contract": "CROPredict",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/RANCE.sol:333"
            },
            {
              "contract": "CROPredict",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/RANCE.sol:335"
            },
            {
              "contract": "CROPredict",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/RANCE.sol:336"
            },
            {
              "contract": "CROPredict",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/RANCE.sol:337"
            },
            {
              "contract": "CROPredict",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/RANCE.sol:338"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "contracts/RANCE.sol:105",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/RANCE.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts/RANCE.sol:281",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/RANCE.sol:289"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/RANCE.sol:282"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts/RANCE.sol:133",
        "version": {
          "withMetadata": "62972941bf5fad530106e1297d7e1b83649b2a4543fb5463dccc15b565d0c3f4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:18",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:17",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fde3f15d183e5e4adb501d42de9202b654fb1ba86f54e91669d295220ea9dc67",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:31",
        "version": {
          "withMetadata": "d97ce47a76206ff30e04246fd1439c8c09a0fbbdda81ab79e81107994b19dce6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "995abfd5901dc380f3fed9da99f86b86b04d5a1bbe1a1ce59071222e12ce57ec",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "26611e32a15a00144207b601573c8db0b03bac6851e9edb16d9974217ed40294",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "0023e734e710c06754cbf37a92d68bb6f42a4cc6d154a145d945ec780b06c2f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IMigratorChef": {
        "src": "contracts/Farm.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterCRP": {
        "src": "contracts/Farm.sol:36",
        "version": {
          "withMetadata": "75c6ce9bde062160c12e752dadfd25e5c1c8ef58f8d567908b544b6487366801",
          "withoutMetadata": "e738e68f06133f61f887e1126bf5756763b178c55d527eef9e6a5b24bed96d2e",
          "linkedWithoutMetadata": "e738e68f06133f61f887e1126bf5756763b178c55d527eef9e6a5b24bed96d2e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeBEP20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,address)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingCRP(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "compound()",
          "emergencyWithdraw(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MasterCRP",
              "label": "CRP",
              "type": "t_contract(IBEP20)3872",
              "src": "contracts/Farm.sol:66"
            },
            {
              "contract": "MasterCRP",
              "label": "CRPPerBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:68"
            },
            {
              "contract": "MasterCRP",
              "label": "BONUS_MULTIPLIER",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:70"
            },
            {
              "contract": "MasterCRP",
              "label": "migrator",
              "type": "t_contract(IMigratorChef)2520",
              "src": "contracts/Farm.sol:72"
            },
            {
              "contract": "MasterCRP",
              "label": "wallet",
              "type": "t_contract(MasterCRPWallet)3794",
              "src": "contracts/Farm.sol:74"
            },
            {
              "contract": "MasterCRP",
              "label": "poolInfo",
              "type": "t_array(t_struct(PoolInfo)2550_storage)dyn_storage",
              "src": "contracts/Farm.sol:77"
            },
            {
              "contract": "MasterCRP",
              "label": "userInfo",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))",
              "src": "contracts/Farm.sol:79"
            },
            {
              "contract": "MasterCRP",
              "label": "totalAllocPoint",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:81"
            },
            {
              "contract": "MasterCRP",
              "label": "startBlock",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:83"
            },
            {
              "contract": "MasterCRP",
              "label": "totalRewardDebt",
              "type": "t_uint256",
              "src": "contracts/Farm.sol:85"
            }
          ],
          "types": {
            "t_contract(IBEP20)3872": {
              "label": "contract IBEP20"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(IMigratorChef)2520": {
              "label": "contract IMigratorChef"
            },
            "t_contract(MasterCRPWallet)3794": {
              "label": "contract MasterCRPWallet"
            },
            "t_array(t_struct(PoolInfo)2550_storage)dyn_storage": {
              "label": "struct MasterCRP.PoolInfo[]"
            },
            "t_struct(PoolInfo)2550_storage": {
              "label": "struct MasterCRP.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IBEP20)3872"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256"
                },
                {
                  "label": "accCRPPerShare",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)2540_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MasterCRP.UserInfo))"
            },
            "t_mapping(t_address,t_struct(UserInfo)2540_storage)": {
              "label": "mapping(address => struct MasterCRP.UserInfo)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UserInfo)2540_storage": {
              "label": "struct MasterCRP.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "LPToken1": {
        "src": "contracts/LPTokens.sol:7",
        "version": {
          "withMetadata": "f7a7919a24a843a3ef65eec6874f4a28c1b5e2f6342bfb9d4ed3b64895ffdae1",
          "withoutMetadata": "38f5c88e7b0602da6944e9884df39901c326a1f6b9e12547fc12dc77c53f3866",
          "linkedWithoutMetadata": "38f5c88e7b0602da6944e9884df39901c326a1f6b9e12547fc12dc77c53f3866"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LPToken1",
            "src": "contracts/LPTokens.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LPToken2": {
        "src": "contracts/LPTokens.sol:13",
        "version": {
          "withMetadata": "282cd12f9f2ad3c955b416adc8c67c6a2348e60d14f7b8a7a1631d7782f4b0d8",
          "withoutMetadata": "cc4057acd81071cc9433421474f5802c561529a438297851820615cad6cc3305",
          "linkedWithoutMetadata": "cc4057acd81071cc9433421474f5802c561529a438297851820615cad6cc3305"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LPToken2",
            "src": "contracts/LPTokens.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MasterCRPWallet": {
        "src": "contracts/MasterCRPWallet.sol:8",
        "version": {
          "withMetadata": "07a9f10f2a0785d32f5c3a0a76a170ec77dcb62d284104a7ea8e989d44fcc105",
          "withoutMetadata": "472170fd5d90029b10b5e4cdf780cebf5886b4cab4e92bd9165f7eb4c723fd31",
          "linkedWithoutMetadata": "472170fd5d90029b10b5e4cdf780cebf5886b4cab4e92bd9165f7eb4c723fd31"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20"
        ],
        "methods": [
          "(address)",
          "setMasterCRP(address)",
          "safeCRPTransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MasterCRPWallet",
            "src": "contracts/MasterCRPWallet.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MasterCRPWallet",
              "label": "CRP",
              "type": "t_contract(IBEP20)3872",
              "src": "contracts/MasterCRPWallet.sol:11"
            },
            {
              "contract": "MasterCRPWallet",
              "label": "MasterCRP",
              "type": "t_address",
              "src": "contracts/MasterCRPWallet.sol:12"
            }
          ],
          "types": {
            "t_contract(IBEP20)3872": {
              "label": "contract IBEP20"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/interfaces/IBEP20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeBEP20": {
        "src": "contracts/utils/SafeBEP20.sol:17",
        "version": {
          "withMetadata": "b6a287dcfd3237f5abb3d18109e2a8869e762a661c81a43a429580b339f5a36c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "CROPredict": {
        "src": "contracts/CRP.sol:328",
        "version": {
          "withMetadata": "6d75185588659a49d42e172c5f18554bfd5b7fdc38a5cb9269c51b17f2538ccc",
          "withoutMetadata": "6b80cf22466ea9f51107e39df396b6f2e892520daa298037df789e595102eeae",
          "linkedWithoutMetadata": "6b80cf22466ea9f51107e39df396b6f2e892520daa298037df789e595102eeae"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "burn(uint256)",
          "_burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CROPredict",
            "src": "contracts/CRP.sol:340"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "CROPredict",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/CRP.sol:331"
            },
            {
              "contract": "CROPredict",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/CRP.sol:333"
            },
            {
              "contract": "CROPredict",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts/CRP.sol:335"
            },
            {
              "contract": "CROPredict",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts/CRP.sol:336"
            },
            {
              "contract": "CROPredict",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/CRP.sol:337"
            },
            {
              "contract": "CROPredict",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/CRP.sol:338"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "contracts/CRP.sol:105",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts/CRP.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts/CRP.sol:281",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/CRP.sol:289"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/CRP.sol:282"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts/CRP.sol:133",
        "version": {
          "withMetadata": "017a2be96a65098ede4aecdba6c35982d2b8d02034aea382b4a91a30e40edcc7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}